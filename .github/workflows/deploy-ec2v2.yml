name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Debug - List Repository Files
      run: ls -la
    



    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin


    - name: Pull Docker image from Docker Hub
      run: docker pull jeremyhuegel/flask-backend:latest
    
    - name: Pull Docker image from Docker Hub
      run: docker pull jeremyhuegel/nginx-backend:1.0

    - name: Debug
      continue-on-error: true
      run: |
        pwd
        ls -lah
    
  
    - name: Copy files to server using SCP alternative (rsync)
      run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./templates/flask-react/docker-compose.yml ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/templates/docker-compose.yml
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./templates/flask-react/nginx/Dockerfile ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/templates/nginx/Dockerfile
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./templates/flask-react/nginx/default.conf ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/templates/nginx/default.conf
          rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./templates/flask-react/flask/Dockerfile ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/templates/flask/Dockerfile
      
    - name: Deploy to AWS EC2 using SSH
      run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/templates  
      
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/flask-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nginx-backend:1.0
            
            docker-compose up -d
          EOF
          
        
# docker stop jeremyhuegel/flask-backend:latest
# docker stop jeremyhuegel/nginx-backend:1.0

# docker rm jeremyhuegel/flask-backend:latest
# docker rm jeremyhuegel/nginx-backend:1.0

# docker run -d -p 5500:5500 --name flask-backend --restart always ${{ secrets.DOCKERHUB_USERNAME }}/flask-backend:latest
# docker run -d -p 80:80 --name nginx-backend --restart always --link flask-backend ${{ secrets.DOCKERHUB_USERNAME }}/nginx-backend:1.0

#docker-compose down
#docker-compose up -d

